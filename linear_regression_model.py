# -*- coding: utf-8 -*-
"""linear regression model.ipynb

Automatically generated by Colaboratory.
The dataset is from the current directory on github

# first i need to mount drive to access the csv file
from google.colab import drive
drive.mount("/content/drive")

import pandas as pd
data = pd.read_csv("dft-road-casualty-statistics-casualty-provisional-mid-year-unvalidated-2022 (1).csv")
data.head()

df = pd.DataFrame(data)
for columns in df.columns:
  print(columns)

df.info(verbose=True)

"""*From the above results, there are no null values*"""

df.casualty_severity

import matplotlib.pyplot as plt

x = df['age_of_casualty']
y = df['casualty_severity']

plt.scatter(x, y)
plt.xlabel("age of casuality")
plt.ylabel("casuality severity")
plt.show()

data.plot(x="age_of_casualty", y="casualty_severity", style='o')
plt.show()

import matplotlib.pyplot as plt

x = df['vehicle_reference']
y = df['casualty_severity']

plt.scatter(x, y)
plt.xlabel("Vehicle reference")
plt.ylabel("Casualty severity")
plt.show()

data.plot(x="vehicle_reference", y="casualty_severity", style='o')
plt.show()

"""**using the above independent variables(age and vehicle reference) and dependent variable(casualty severity), now we can use the machine learning multilinear regression model from scikit learn to compute the prediction of the casuality severity**"""

from sklearn.linear_model import LinearRegression

reg = LinearRegression()

X = df[['age_of_casualty', 'vehicle_reference']]
Y = df['casualty_severity']

reg.fit(X, Y)

#view the coefficient
reg.coef_

#view the intercept
reg.intercept_

#view the model score
reg.score(X, Y)

"""***Now it is time to predict some data***"""

prediction_data = pd.DataFrame({
    'age_of_casualty': [28],
    'vehicle_reference': [4]
})

reg.predict(prediction_data)

"""
`**provided 28 years old person and 4 vehicles involved, the casualities may be 2.8465009**`"""

prediction_data2 = pd.DataFrame({
    'age_of_casualty': [76],
    'vehicle_reference': [2]
})

reg.predict(prediction_data2)
